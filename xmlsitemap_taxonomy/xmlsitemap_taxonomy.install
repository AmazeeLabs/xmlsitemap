<?php
// $Id$

/**
 * @file
 * Install and uninstall schema and functions for the xmlsitemap_taxonomy module.
 */

/**
 * Implements hook_uninstall().
 */
function xmlsitemap_taxonomy_uninstall() {
  drupal_load('module', 'taxonomy');
  drupal_load('module', 'xmlsitemap');
  $vids = array_keys(taxonomy_get_vocabularies());
  foreach ($vids as $vid) {
    xmlsitemap_link_bundle_delete('taxonomy_term', $vid);
  }
}

// @todo Remove these update functions before alpha.
function xmlsitemap_taxonomy_update_1() {
  $vids = array_keys(taxonomy_get_vocabularies());
  foreach ($vids as $vid) {
    if (variable_get('xmlsitemap_taxonomy_priority_' . $vid, 'default') === 'default') {
      variable_set('xmlsitemap_taxonomy_priority_' . $vid, 0.5);
    }
  }
}

/**
 * Change 'taxonomy' type to 'taxonomy_term'.
 */
function xmlsitemap_taxonomy_update_2() {
  $field = array(
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'default' => '',
  );
  db_change_field('xmlsitemap', 'type', 'type', $field);
  db_update('xmlsitemap')
    ->fields(array('type' => 'taxonomy_term'))
    ->condition('type', 'taxonomy')
    ->execute();
}

/**
 * Cleanup variables.
 */
function xmlsitemap_taxonomy_update_6200() {
  drupal_load('module', 'taxonomy');
  $vids = array_keys(taxonomy_get_vocabularies());
  foreach ($vids as $vid) {
    $settings = array(
      'status' => variable_get('xmlsitemap_taxonomy_status_' . $vid, 0),
      'priority' => variable_get('xmlsitemap_taxonomy_priority_' . $vid, 0.5),
    );
    variable_set('xmlsitemap_settings_taxonomy_term_' . $vid, $settings);
    variable_del('xmlsitemap_taxonomy_status_' . $vid);
    variable_del('xmlsitemap_taxonomy_priority_' . $vid);
    variable_del('xmlsitemap_taxonomy_calculate_priority_' . $vid);
    variable_del('xmlsitemap_taxonomy_include_empty_terms_' . $vid);
  }
  variable_del('xmlsitemap_taxonomy_include_empty_terms');
  variable_del('xmlsitemap_taxonomy_calculate_priority');
}
